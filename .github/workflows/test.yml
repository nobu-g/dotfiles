name: test

on: [push]

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    container: ubuntu:latest
    steps:
      # - uses: actions/checkout@v2
      - name: Install required packages
        run: apt-get update && apt-get -y upgrade && apt-get install -y gcc git sudo make curl zsh
      - name: Clone this repo
        run: git clone --depth 1 https://github.com/nobu-g/dotfiles.git
      - name: Install dotfiles
        run: make install
        working-directory: ./dotfiles

  # centos:
  #   runs-on: ubuntu-latest
  #   container: centos:latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install required packages
  #       run: yum install -y git sudo make
  #     - name: Install dotfiles
  #       run: make install

  # fedora:
  #   runs-on: ubuntu-latest
  #   container: fedora:latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install required packages
  #       run: dnf clean all && dnf install -y git sudo make
  #     - name: Install dotfiles
  #       run: make install

  # alpine:
  #   runs-on: ubuntu-latest
  #   container: alpine:latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Install required packages
  #       run: apk add git sudo bash make
  #     - name: Install dotfiles
  #       run: make install

  macos:
    runs-on: macos-latest
    steps:
    # - uses: actions/checkout@v2
    - name: debug print pwd
      run: pwd; env
    - name: Clone this repo
      run: git clone --depth 1 https://github.com/nobu-g/dotfiles.git
    - name: Install dotfiles
      run: make install
      working-directory: ./dotfiles

  lint:
    runs-on: ubuntu-latest
    container: ubuntu:latest
    steps:
      - uses: actions/checkout@v2
      - name: Update packages
        run: apt-get update
      - name: Install packages for install repository
        run: DEBIAN_FRONTEND=noninteractive apt-get install -y git sudo software-properties-common python3-pip
      - name: Install required repository
        run: apt-add-repository "deb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe"
      - name: Install required packages
        run: apt-get update && apt-get install -y shellcheck
      - name: Execute shellcheck (zsh)
        run: test $(find ./.zsh.d/ -type f | xargs shellcheck -f gcc --exclude=SC1036,SC1056,SC1072,SC1073,SC1090,SC2139,SC2206,SC2034,SC2148,SC2016,SC2086,SC2128,SC2068,SC2155,SC2001 | tee -a /dev/stderr | wc -l) -le 1
      - name: Execute shellcheck (installer)
        run: test $(git ls-files | grep "\.sh$" | xargs shellcheck -f gcc --exclude=SC1090,SC2086 | tee -a /dev/stderr | wc -l) -le 0
