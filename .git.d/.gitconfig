[user]

[init]
    defaultBranch = main

[alias]
    s = status
    a = add
    ps = push
    pl = pull
    pus = push
    pul = pull
    d = diff
    df = diff
    dc = diff --cached
    dfc = diff --cached
    co = checkout
    cob = checkout -b
    com = checkout master
    bra = branch
    cm = commit -m
    cam = commit -a -m
    unstage = reset HEAD --
    last = log -1 HEAD
    aliases = config --get-regexp alias
    remotes = remote -v
    tags = tag
    l = log --graph --pretty='%C(yellow)%h%Creset %C(cyan bold)%d%Creset %s %Cgreen[%cd] %C(bold blue)<%an> %Creset' --decorate --date=iso
	tree = log --graph --all --format=format:\"%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)? %an%C(reset)%C(bold yellow)%d%C(reset)\" --abbrev-commit --date=relative

[core]
    pager = delta

[color]
    ui = true

[merge]
    ff = false

[pull]
    ff = only

[fetch]
    prune = true

[push]
    # Always push tags, see https://git-scm.com/docs/git-config#git-config-pushfollowTags.
    followTags = true

[delta]
    features = line-numbers
    plus-style = bold green
    plus-non-emph-style = brightgreen
    plus-emph-style = bold green 22
    minus-style = bold red
    minus-non-emph-style = brightred
    minus-emph-style = bold red 52
    syntax-theme = Dracula
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow ul
    file-decoration-style = yellow
    hunk-header-style = cyan
    hunk-header-decoration-style = cyan ul

[delta "line-numbers"]
    line-numbers = true
    line-numbers-left-style = cyan
    line-numbers-right-style = cyan
    line-numbers-minus-style = 124
    line-numbers-plus-style = 28

[diff]
    colorMoved = default

[diff "bin"]
    # Use `hexdump` to diff binary files.
    textconv = hexdump -v -C

[interactive]
    diffFilter = delta --color-only

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true

# https://stackoverflow.com/questions/16244969/how-to-tell-git-to-ignore-individual-lines-i-e-gitignore-for-specific-lines-of
# If a filter named "gitignore" is applied, lines that end with "# gitignore" are ignored
[filter "gitignore"]
    clean = "sed '/# gitignore$/d'"
    smudge = cat

[advice]
    addIgnoredFile = false

# [ghq]
#     root = ~/Projects

[url "git@github.com:"]
    insteadOf = https://github.com/
